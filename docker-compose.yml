version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:latest
    container_name: mintratrade-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: mintratrade
    volumes:
      - mongodb_data:/data/db
      - ./scripts/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - mintratrade-network

  # Redis Cache
  redis:
    image: redis:alpine
    container_name: mintratrade-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis123
    volumes:
      - redis_data:/data
    networks:
      - mintratrade-network

  # Backend API
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: mintratrade-backend
    restart: unless-stopped
    ports:
      - "5000:5000"
    environment:
      - NODE_ENV=production
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/mintratrade?authSource=admin
      - REDIS_URL=redis://:redis123@redis:6379
      - JWT_SECRET=your_super_secret_jwt_key_for_production
      - CLIENT_URL=http://localhost:3000
    depends_on:
      - mongodb
      - redis
    volumes:
      - ./server:/app
      - /app/node_modules
    networks:
      - mintratrade-network

  # Frontend React App
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
      args:
        - REACT_APP_API_URL=http://localhost:5000/api
        - REACT_APP_SOCKET_URL=http://localhost:5000
    container_name: mintratrade-frontend
    restart: unless-stopped
    ports:
      - "3000:3000"
    depends_on:
      - backend
    volumes:
      - ./client:/app
      - /app/node_modules
    networks:
      - mintratrade-network

  # Nginx Reverse Proxy (for production)
  nginx:
    image: nginx:alpine
    container_name: mintratrade-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - ./client/build:/var/www/html:ro
    depends_on:
      - frontend
      - backend
    networks:
      - mintratrade-network
    profiles:
      - production

volumes:
  mongodb_data:
    driver: local
  redis_data:
    driver: local

networks:
  mintratrade-network:
    driver: bridge

# Development override
# To use: docker-compose -f docker-compose.yml -f docker-compose.dev.yml up
---
version: '3.8'

# docker-compose.dev.yml (development overrides)
services:
  backend:
    environment:
      - NODE_ENV=development
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/mintratrade?authSource=admin
    command: npm run dev
    volumes:
      - ./server:/app
      - /app/node_modules

  frontend:
    command: npm start
    environment:
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./client:/app
      - /app/node_modules

# Production override  
# To use: docker-compose -f docker-compose.yml -f docker-compose.prod.yml up
---
version: '3.8'

# docker-compose.prod.yml (production overrides)
services:
  backend:
    environment:
      - NODE_ENV=production
    command: npm start
    
  frontend:
    command: serve -s build -l 3000
    
  nginx:
    profiles: []  # Enable nginx for production